name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

env:
  WORKDIR: "/var/www/app"
  COMPOSER_ALLOW_SUPERUSER: "1"

jobs:
  #############################################################################
  # 1) Analyse statique – PHPStan
  #############################################################################
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Fournir les fichiers d'env attendus par docker-compose
      - name: Prepare env for CI (.env.dist + .env)
        run: |
          cat > .env.dist <<'EOF'
          MYSQL_ROOT_PASSWORD=root
          MYSQL_USER=app
          MYSQL_PASSWORD=app
          MYSQL_DATABASE=app

          APP_ENV=dev
          APP_DEBUG=0
          MAILER_DSN=null://localhost
          PMA_HOST=mysql
          PMA_PORT=3306

          DATABASE_URL="mysql://app:app@mysql:3306/app?serverVersion=8.4&charset=utf8mb4"
          EOF
          cp .env.dist .env

      - name: Build Docker images
        run: docker compose build --pull --progress plain

      - name: Install Composer dependencies (dev)
        env:
          WORKDIR: ${{ env.WORKDIR }}
          COMPOSER_ALLOW_SUPERUSER: ${{ env.COMPOSER_ALLOW_SUPERUSER }}
        run: |
          docker compose run --rm --no-deps --entrypoint "" \
            --user 0:0 \
            --workdir "$WORKDIR" \
            -e COMPOSER_ALLOW_SUPERUSER="$COMPOSER_ALLOW_SUPERUSER" \
            php sh -lc "git config --global --add safe.directory /var/www && composer install -n --prefer-dist --no-scripts"

      - name: Run PHPStan
        env:
          WORKDIR: ${{ env.WORKDIR }}
        run: |
          docker compose run --rm --no-deps --entrypoint "" \
            --workdir "$WORKDIR" \
            php sh -lc "vendor/bin/phpstan analyse --level max"

  #############################################################################
  # 2) Tests unitaires – PHPUnit
  #############################################################################
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Même préparation mais APP_ENV=test
      - name: Prepare env for CI (.env.dist + .env)
        run: |
          cat > .env.dist <<'EOF'
          MYSQL_ROOT_PASSWORD=root
          MYSQL_USER=app
          MYSQL_PASSWORD=app
          MYSQL_DATABASE=app

          APP_ENV=test
          APP_DEBUG=0
          MAILER_DSN=null://localhost
          PMA_HOST=mysql
          PMA_PORT=3306

          DATABASE_URL="mysql://app:app@mysql:3306/app?serverVersion=8.4&charset=utf8mb4"
          EOF
          cp .env.dist .env

      - name: Build Docker images
        run: docker compose build --pull --progress plain

      - name: Install Composer dependencies (dev)
        env:
          WORKDIR: ${{ env.WORKDIR }}
          COMPOSER_ALLOW_SUPERUSER: ${{ env.COMPOSER_ALLOW_SUPERUSER }}
        run: |
          docker compose run --rm --no-deps --entrypoint "" \
            --user 0:0 \
            --workdir "$WORKDIR" \
            -e COMPOSER_ALLOW_SUPERUSER="$COMPOSER_ALLOW_SUPERUSER" \
            php sh -lc "git config --global --add safe.directory /var/www && composer install -n --prefer-dist --no-scripts"

      - name: Run PHPUnit
        env:
          WORKDIR: ${{ env.WORKDIR }}
        run: |
          docker compose run --rm --no-deps --entrypoint "" \
            --user 0:0 \
            --workdir "$WORKDIR" \
            -e APP_ENV=test \
            php sh -lc "git config --global --add safe.directory /var/www && php vendor/bin/simple-phpunit --testdox"
