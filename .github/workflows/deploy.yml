name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: cd-main
  cancel-in-progress: true

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}
      IMAGE_TAG: ${{ github.event_name == 'workflow_dispatch' && github.sha || github.event.workflow_run.head_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.IMAGE_TAG }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Fly.io
        if: ${{ secrets.FLY_API_TOKEN && secrets.FLY_APP_NAME }}
        uses: superfly/flyctl-actions@v1
        with:
          args: deploy --app ${{ secrets.FLY_APP_NAME }} --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to VPS via SSH
        if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.REMOTE_COMPOSE_PATH }}
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT || 22 }}
          REMOTE_COMPOSE_PATH: ${{ secrets.REMOTE_COMPOSE_PATH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN"
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker pull $IMAGE_NAME:$IMAGE_TAG"
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "IMAGE=$IMAGE_NAME:$IMAGE_TAG docker compose -f $REMOTE_COMPOSE_PATH pull"
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "IMAGE=$IMAGE_NAME:$IMAGE_TAG docker compose -f $REMOTE_COMPOSE_PATH up -d"
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "docker image prune -f"

      - name: Notify failure to Slack
        if: failure() && secrets.SLACK_WEBHOOK_URL
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"CD failed on $GITHUB_REPOSITORY@$IMAGE_TAG â€” run: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify failure by email
        if: failure() && secrets.MAIL_SERVER && secrets.MAIL_TO && secrets.MAIL_FROM && secrets.MAIL_USERNAME && secrets.MAIL_PASSWORD
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT || 587 }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: CD failed: ${{ github.repository }} @ ${{ env.IMAGE_TAG }}
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          secure: ${{ secrets.MAIL_SECURE || 'starttls' }}
          body: CD failed. Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
